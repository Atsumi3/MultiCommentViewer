<Window x:Class="OutlineTextPlugin.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OutlineTextPlugin"
        xmlns:w="clr-namespace:Common.Wpf;assembly=Common"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:Common="clr-namespace:Common;assembly=Common" 
        mc:Ignorable="d"
        Title="縁取り文字プラグイン" Height="450" Width="800">
    <Window.Resources>
        <local:ImageConverter x:Key="imageConverter" />
        <w:IntToFontSizeConverter x:Key="intToFontConverter" />
        <w:DataGridLengthValueConverter x:Key="dataGridLengthConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="120" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <FrameworkElement x:Name="dummyElement" Visibility="Collapsed" DataContext="{Binding}"/>
        <DataGrid ItemsSource="{Binding Comments, IsAsync=True}"
                  AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"                      
                      CanUserReorderColumns="True"
                      CanUserResizeColumns="True"
                      CanUserResizeRows="True"
                      CanUserSortColumns="False"    
                      HeadersVisibility="All"
                      RowHeaderWidth="0"
                      SelectionUnit="FullRow"
                      SelectionMode="Single"
                      EnableColumnVirtualization="True"
                      EnableRowVirtualization="True"                      
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      VirtualizingPanel.ScrollUnit="Item"
                      GridLinesVisibility="{Binding GridLinesVisibility}"
                      HorizontalGridLinesBrush="{Binding HorizontalGridLineBrush}"
                      VerticalGridLinesBrush="{Binding VerticalGridLineBrush}"
                      VerticalScrollBarVisibility="Visible"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.ScrollChanged="dataGrid_ScrollChanged"   
                  Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="FontFamily" Value="{Binding DataContext.FontFamily, Source={x:Reference dummyElement}}" />
                    <Setter Property="FontStyle" Value="{Binding DataContext.FontStyle, Source={x:Reference dummyElement}}" />
                    <Setter Property="FontWeight" Value="{Binding DataContext.FontWeight, Source={x:Reference dummyElement}}" />
                    <Setter Property="FontSize" Value="{Binding DataContext.FontSize, Converter={StaticResource intToFontConverter}, Source={x:Reference dummyElement}}"/>
                    <Setter Property="Background" Value="{Binding DataContext.Background, Source={x:Reference dummyElement}}" />
                    <Setter Property="BorderBrush" Value="{Binding DataContext.Background, Source={x:Reference dummyElement}}" />
                </Style>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="サムネ"
                                        DisplayIndex="{Binding DataContext.ThumbnailDisplayIndex, Mode=TwoWay, Source={x:Reference dummyElement}, FallbackValue=0}"
                                            Width="{Binding DataContext.ThumbnailWidth, Mode=TwoWay, Source={x:Reference dummyElement}, Converter={StaticResource dataGridLengthConverter}}"
                                        >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Ellipse Width="{Binding ThumbnailWidth}" Height="{Binding ThumbnailHeight}" Margin="5,5,0,0">
                                <Ellipse.Fill>
                                    <ImageBrush>
                                        <ImageBrush.ImageSource>
                                            <MultiBinding Converter="{StaticResource imageConverter}">
                                                <Binding Path="ThumbnailUrl" />
                                                <Binding Path="ThumbnailWidth" />
                                                <Binding Path="ThumbnailHeight" />
                                            </MultiBinding>
                                        </ImageBrush.ImageSource>
                                    </ImageBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="名前"
                                        DisplayIndex="{Binding DataContext.UserNameDisplayIndex, Mode=TwoWay, Source={x:Reference dummyElement}, FallbackValue=1}"
                                        Width="{Binding DataContext.UserNameWidth, Mode=TwoWay, Source={x:Reference dummyElement}, Converter={StaticResource dataGridLengthConverter}}"

                                        >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <local:OutlineText TextWrapping="Wrap"
                                               StrokeThickness="{Binding DataContext.CommentOutlineTextThickness, Source={x:Reference dummyElement}}"
                                               Stroke="{Binding DataContext.CommentOutlineStrokeColorBrush, Source={x:Reference dummyElement}}"
                                               Fill="{Binding DataContext.CommentOutlineFillColorBrush, Source={x:Reference dummyElement}}"
                                               Text="{Binding Name}" Margin="5,0,5,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="コメント"
                                        DisplayIndex="{Binding DataContext.MessageDisplayIndex, Mode=TwoWay, Source={x:Reference dummyElement}, FallbackValue=2}"
                                        Width="{Binding DataContext.MessageWidth, Mode=TwoWay, Source={x:Reference dummyElement}, Converter={StaticResource dataGridLengthConverter}}"
                                        >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <local:OutlineText TextWrapping="Wrap"
                                               StrokeThickness="{Binding DataContext.CommentOutlineTextThickness, Source={x:Reference dummyElement}}"
                                               Stroke="{Binding DataContext.CommentOutlineStrokeColorBrush, Source={x:Reference dummyElement}}"
                                               Fill="{Binding DataContext.CommentOutlineFillColorBrush, Source={x:Reference dummyElement}}"
                                               Text="{Binding Message}" Margin="5,0,5,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <GroupBox HorizontalAlignment="Left" Height="120" Margin="19,0,0,0" VerticalAlignment="Top" Width="716">
            <GroupBox.Header>
                <CheckBox x:Name="IsEnabledCheckbox" IsChecked="{Binding IsEnabled}" Content="有効" />
            </GroupBox.Header>
            <Grid IsEnabled="{Binding ElementName=IsEnabledCheckbox, Path=IsChecked}">
                <ComboBox ItemsSource="{Binding FontFamillyCollection}" DisplayMemberPath="Text" SelectedValue="{Binding SelectedFontFamily, Mode=TwoWay}" HorizontalAlignment="Left" Margin="51,5,0,0" VerticalAlignment="Top" Width="77"/>
                <ComboBox ItemsSource="{Binding FontSizeCollection}" SelectedValue="{Binding FontSize}" HorizontalAlignment="Left" Margin="79,32,0,0" VerticalAlignment="Top" Width="49"/>
                <CheckBox Content="太字" IsChecked="{Binding IsBold}" HorizontalAlignment="Left" Margin="10,62,0,0" VerticalAlignment="Top" RenderTransformOrigin="-2.636,-0.133"/>
                <Common:NumericUpDown Value="{Binding CommentOutlineTextThickness}" Minimum="1" HorizontalAlignment="Left" Height="26" Margin="215,2,0,0" VerticalAlignment="Top" Width="43" RenderTransformOrigin="-1.047,0.192"/>
                <Label Content="縁取りの太さ" HorizontalAlignment="Left" Margin="143,3,0,0" VerticalAlignment="Top" RenderTransformOrigin="1.053,1.154"/>
                <xctk:ColorPicker SelectedColor="{Binding CommentOutlineStrokeColor}" Margin="215,33,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" RenderTransformOrigin="5.6,4.545" />
                <Label Content="縁取りの色" HorizontalAlignment="Left" Margin="143,25,0,0" VerticalAlignment="Top"/>
                <xctk:ColorPicker SelectedColor="{Binding CommentOutlineFillColor}" Margin="215,60,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" RenderTransformOrigin="5.6,4.545" />
                <Label Content="内側の色" HorizontalAlignment="Left" Margin="143,56,0,0" VerticalAlignment="Top"/>
                <Label Content="フォント" HorizontalAlignment="Left" Margin="0,2,0,0" VerticalAlignment="Top"/>
                <Label Content="フォントサイズ" HorizontalAlignment="Left" Margin="0,25,0,0" VerticalAlignment="Top"/>

                <CheckBox x:Name="checkBox1" Content="行グリッド線（横線）を表示する" IsChecked="{Binding IsShowHorizontalGridLine}" HorizontalAlignment="Left" Margin="430,53,0,0" VerticalAlignment="Top"/>
                <Label x:Name="label8" Content="行グリッド線の色" IsEnabled="{Binding IsShowHorizontalGridLine}" HorizontalAlignment="Left" Margin="460,73,0,0" VerticalAlignment="Top"/>
                <xctk:ColorPicker SelectedColor="{Binding HorizontalGridLineColor}" IsEnabled="{Binding IsShowHorizontalGridLine}" Margin="550,73,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" />

                <CheckBox x:Name="checkBox2" Content="列グリッド線（縦線）を表示する" IsChecked="{Binding IsShowVerticalGridLine}" HorizontalAlignment="Left" Margin="430,5,0,0" VerticalAlignment="Top"/>
                <Label x:Name="label9" Content="列グリッド線の色" IsEnabled="{Binding IsShowVerticalGridLine}" HorizontalAlignment="Left" Margin="460,21,0,0" VerticalAlignment="Top"/>
                <xctk:ColorPicker  SelectedColor="{Binding VerticalGridLineColor}" IsEnabled="{Binding IsShowVerticalGridLine}" Margin="550,25,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" />
                <Label Content="背景色" HorizontalAlignment="Left" Margin="300,5,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.065,0.615"/>
                <xctk:ColorPicker SelectedColor="{Binding BackColor}" Margin="351,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="64" RenderTransformOrigin="5.6,4.545" />
            </Grid>
        </GroupBox>
    </Grid>
</Window>
